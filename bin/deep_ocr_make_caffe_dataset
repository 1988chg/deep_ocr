#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function


import argparse
from argparse import RawTextHelpFormatter
import fnmatch
import os
import cv2
import json
import random
import numpy as np
import shutil
from deep_ocr.lang_aux import LangCharsGenerate
from deep_ocr.lang_aux import FontCheck

if __name__ == "__main__":

    description = '''
    '''

    parser = argparse.ArgumentParser(
        description=description, formatter_class=RawTextHelpFormatter)
    parser.add_argument('--out_caffe_dir', dest='out_caffe_dir',
                        default=None, required=True,
                        help='write a caffe dir')
    parser.add_argument('--font_dir', dest='font_dir',
                        default=None, required=True,
                        help='font dir to to produce images')
    parser.add_argument('--test_ratio', dest='test_ratio',
                        default=0.3, required=False,
                        help='test dataset size')
    parser.add_argument('--width', dest='width',
                        default=None, required=True,
                        help='width')
    parser.add_argument('--height', dest='height',
                        default=None, required=True,
                        help='height')
    parser.add_argument('--no_crop', dest='no_crop',
                        default=False, required=False,
                        help='', action='store_true')
    parser.add_argument('--margin', dest='margin',
                        default=0, required=False,
                        help='', )
    parser.add_argument('--langs', dest='langs',
                        default="chi_sim", required=True,
                        help='deep_ocr.langs.*, e.g. chi_sim, chi_tra, digits...')
    options = parser.parse_args()

    out_caffe_dir = os.path.expanduser(options.out_caffe_dir)
    font_dir = os.path.expanduser(options.font_dir)
    test_ratio = float(options.test_ratio)
    width = options.width
    height = options.height
    no_crop = options.no_crop
    margin = int(options.margin)
    langs = options.langs

    images_dir = os.path.join(out_caffe_dir, "images")
    if os.path.isdir(images_dir):
        shutil.rmtree(images_dir)
    os.makedirs(images_dir)
    
    lang_chars_gen = LangCharsGenerate(langs)
    lang_chars = lang_chars_gen.do()
    font_check = FontCheck(lang_chars)

    verified_font_paths = []
    ## search for file fonts
    for font_name in os.listdir(font_dir):
        path_font_file = os.path.join(font_dir, font_name)
        if font_check.do(path_font_file):
            verified_font_paths.append(path_font_file)

    
    
    
    
    
    
